name: CI Validations

on:
  workflow_call:

jobs:
  checklist:
    name: Checklist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project-name:
          - articles/BunsenBurner/tests/ToDoApi.BunsenBurner.Tests/ToDoApi.BunsenBurner.Tests.csproj
          - articles/BunsenBurner/tests/ToDoApi.Tests/ToDoApi.Tests.csproj
          - articles/ResilientHttpClients/tests/ResilientHttpClients.Services.Tests/ResilientHttpClients.Services.Tests.csproj
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Check C# Code Formatting
        run: dotnet csharpier . --check

      - name: Restore Dependencies
        run: dotnet restore ${{matrix.project-name}}

      - name: Build Project
        run: dotnet build ${{matrix.project-name}} --configuration Release --no-restore

      - name: Test with coverage
        run: |
          # Use the project file path explicitly
          dotnet test ${{matrix.project-name}} \
            --collect:"XPlat Code Coverage" \
            --settings coverlet.runsettings \
            --results-directory TestResults \
            --no-build \
            --logger trx
          
          # Generate individual report for debugging
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator \
            -reports:"${{matrix.project-name}}/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"${{matrix.project-name}}/CoverageReport" \
            -reporttypes:"Html"

      # This would need to be in a separate job that depends on this one
      # - name: Merge and check coverage
      #   run: |
      #     reportgenerator \
      #       -reports:**/coverage.cobertura.xml \
      #       -targetdir:./CombinedCoverageReport \
      #       -reporttypes:"Cobertura"
      #   
      #   # Check coverage would go here